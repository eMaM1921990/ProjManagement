/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.pm.app.dal.dao;

import com.pm.app.dal.dto.*;
import com.pm.app.dal.exceptions.*;

public interface BranchesDao
{
	/** 
	 * Inserts a new row in the branches table.
	 */
	public BranchesPk insert(Branches dto) throws BranchesDaoException;

	/** 
	 * Updates a single row in the branches table.
	 */
	public void update(BranchesPk pk, Branches dto) throws BranchesDaoException;

	/** 
	 * Deletes a single row in the branches table.
	 */
	public void delete(BranchesPk pk) throws BranchesDaoException;

	/** 
	 * Returns the rows from the branches table that matches the specified primary-key value.
	 */
	public Branches findByPrimaryKey(BranchesPk pk) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'idbranches = :idbranches'.
	 */
	public Branches findByPrimaryKey(int idbranches) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria ''.
	 */
	public Branches[] findAll() throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'company_id = :companyId'.
	 */
	public Branches[] findByCompany(int companyId) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'idbranches = :idbranches'.
	 */
	public Branches[] findWhereIdbranchesEquals(int idbranches) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'name = :name'.
	 */
	public Branches[] findWhereNameEquals(String name) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'location = :location'.
	 */
	public Branches[] findWhereLocationEquals(String location) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the criteria 'company_id = :companyId'.
	 */
	public Branches[] findWhereCompanyIdEquals(int companyId) throws BranchesDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the branches table that match the specified arbitrary SQL statement
	 */
	public Branches[] findByDynamicSelect(String sql, Object[] sqlParams) throws BranchesDaoException;

	/** 
	 * Returns all rows from the branches table that match the specified arbitrary SQL statement
	 */
	public Branches[] findByDynamicWhere(String sql, Object[] sqlParams) throws BranchesDaoException;

}
