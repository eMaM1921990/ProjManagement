/*
 * This source file was generated by FireStorm/DAO.
 * 
 * If you purchase a full license for FireStorm/DAO you can customize this header file.
 * 
 * For more information please visit http://www.codefutures.com/products/firestorm
 */

package com.pm.app.dal.dao;

import com.pm.app.dal.dto.*;
import com.pm.app.dal.exceptions.*;

public interface BusinessPartnerTypeDao
{
	/** 
	 * Inserts a new row in the business_partner_type table.
	 */
	public BusinessPartnerTypePk insert(BusinessPartnerType dto) throws BusinessPartnerTypeDaoException;

	/** 
	 * Updates a single row in the business_partner_type table.
	 */
	public void update(BusinessPartnerTypePk pk, BusinessPartnerType dto) throws BusinessPartnerTypeDaoException;

	/** 
	 * Deletes a single row in the business_partner_type table.
	 */
	public void delete(BusinessPartnerTypePk pk) throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns the rows from the business_partner_type table that matches the specified primary-key value.
	 */
	public BusinessPartnerType findByPrimaryKey(BusinessPartnerTypePk pk) throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns all rows from the business_partner_type table that match the criteria 'idbusiness_partner_type = :idbusinessPartnerType'.
	 */
	public BusinessPartnerType findByPrimaryKey(int idbusinessPartnerType) throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns all rows from the business_partner_type table that match the criteria ''.
	 */
	public BusinessPartnerType[] findAll() throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns all rows from the business_partner_type table that match the criteria 'idbusiness_partner_type = :idbusinessPartnerType'.
	 */
	public BusinessPartnerType[] findWhereIdbusinessPartnerTypeEquals(int idbusinessPartnerType) throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns all rows from the business_partner_type table that match the criteria 'type = :type'.
	 */
	public BusinessPartnerType[] findWhereTypeEquals(String type) throws BusinessPartnerTypeDaoException;

	/** 
	 * Sets the value of maxRows
	 */
	public void setMaxRows(int maxRows);

	/** 
	 * Gets the value of maxRows
	 */
	public int getMaxRows();

	/** 
	 * Returns all rows from the business_partner_type table that match the specified arbitrary SQL statement
	 */
	public BusinessPartnerType[] findByDynamicSelect(String sql, Object[] sqlParams) throws BusinessPartnerTypeDaoException;

	/** 
	 * Returns all rows from the business_partner_type table that match the specified arbitrary SQL statement
	 */
	public BusinessPartnerType[] findByDynamicWhere(String sql, Object[] sqlParams) throws BusinessPartnerTypeDaoException;

}
